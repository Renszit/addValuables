// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InventoryScreen renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F4F3EF",
      "flex": 1,
      "height": "100%",
      "justifyContent": "space-between",
      "paddingHorizontal": 20,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "flexDirection": "row",
        "height": 42,
        "justifyContent": "space-between",
        "marginTop": 99,
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "fontFamily": "Circular-Bold",
          "fontSize": 34,
          "lineHeight": 42,
        }
      }
    >
      Inventory
    </Text>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "opacity": 1,
          },
          Object {
            "alignItems": "center",
            "backgroundColor": "#2D50E6",
            "borderRadius": 14,
            "height": 28,
            "justifyContent": "center",
            "width": 28,
          },
        ]
      }
    >
      <Text />
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={[Function]}
    contentContainerStyle={
      Object {
        "paddingBottom": 20,
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "height": "100%",
      }
    }
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "height": 20,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;
